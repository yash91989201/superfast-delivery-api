// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: user.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Gender int32

const (
	Gender_MALE        Gender = 0
	Gender_FEMALE      Gender = 1
	Gender_OTHERS      Gender = 2
	Gender_UNDISCLOSED Gender = 3
)

// Enum value maps for Gender.
var (
	Gender_name = map[int32]string{
		0: "MALE",
		1: "FEMALE",
		2: "OTHERS",
		3: "UNDISCLOSED",
	}
	Gender_value = map[string]int32{
		"MALE":        0,
		"FEMALE":      1,
		"OTHERS":      2,
		"UNDISCLOSED": 3,
	}
)

func (x Gender) Enum() *Gender {
	p := new(Gender)
	*p = x
	return p
}

func (x Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_user_proto_enumTypes[0].Descriptor()
}

func (Gender) Type() protoreflect.EnumType {
	return &file_user_proto_enumTypes[0]
}

func (x Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Gender.Descriptor instead.
func (Gender) EnumDescriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{0}
}

type AddressAlias int32

const (
	AddressAlias_HOME  AddressAlias = 0
	AddressAlias_WORK  AddressAlias = 1
	AddressAlias_HOTEL AddressAlias = 2
	AddressAlias_OTHER AddressAlias = 3
)

// Enum value maps for AddressAlias.
var (
	AddressAlias_name = map[int32]string{
		0: "HOME",
		1: "WORK",
		2: "HOTEL",
		3: "OTHER",
	}
	AddressAlias_value = map[string]int32{
		"HOME":  0,
		"WORK":  1,
		"HOTEL": 2,
		"OTHER": 3,
	}
)

func (x AddressAlias) Enum() *AddressAlias {
	p := new(AddressAlias)
	*p = x
	return p
}

func (x AddressAlias) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddressAlias) Descriptor() protoreflect.EnumDescriptor {
	return file_user_proto_enumTypes[1].Descriptor()
}

func (AddressAlias) Type() protoreflect.EnumType {
	return &file_user_proto_enumTypes[1]
}

func (x AddressAlias) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddressAlias.Descriptor instead.
func (AddressAlias) EnumDescriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{1}
}

type Profile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ImageUrl      *string                `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3,oneof" json:"image_url,omitempty"`
	Dob           *Date                  `protobuf:"bytes,4,opt,name=dob,proto3,oneof" json:"dob,omitempty"`
	Anniversary   *Date                  `protobuf:"bytes,5,opt,name=anniversary,proto3,oneof" json:"anniversary,omitempty"`
	Gender        *Gender                `protobuf:"varint,6,opt,name=gender,proto3,enum=pb.Gender,oneof" json:"gender,omitempty"`
	AuthId        string                 `protobuf:"bytes,7,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Profile) Reset() {
	*x = Profile{}
	mi := &file_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{0}
}

func (x *Profile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Profile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Profile) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *Profile) GetDob() *Date {
	if x != nil {
		return x.Dob
	}
	return nil
}

func (x *Profile) GetAnniversary() *Date {
	if x != nil {
		return x.Anniversary
	}
	return nil
}

func (x *Profile) GetGender() Gender {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return Gender_MALE
}

func (x *Profile) GetAuthId() string {
	if x != nil {
		return x.AuthId
	}
	return ""
}

func (x *Profile) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Profile) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateProfileReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ImageUrl      *string                `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3,oneof" json:"image_url,omitempty"`
	Dob           *Date                  `protobuf:"bytes,3,opt,name=dob,proto3,oneof" json:"dob,omitempty"`
	Anniversary   *Date                  `protobuf:"bytes,4,opt,name=anniversary,proto3,oneof" json:"anniversary,omitempty"`
	Gender        *Gender                `protobuf:"varint,5,opt,name=gender,proto3,enum=pb.Gender,oneof" json:"gender,omitempty"`
	AuthId        string                 `protobuf:"bytes,6,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProfileReq) Reset() {
	*x = CreateProfileReq{}
	mi := &file_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProfileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProfileReq) ProtoMessage() {}

func (x *CreateProfileReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProfileReq.ProtoReflect.Descriptor instead.
func (*CreateProfileReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{1}
}

func (x *CreateProfileReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProfileReq) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *CreateProfileReq) GetDob() *Date {
	if x != nil {
		return x.Dob
	}
	return nil
}

func (x *CreateProfileReq) GetAnniversary() *Date {
	if x != nil {
		return x.Anniversary
	}
	return nil
}

func (x *CreateProfileReq) GetGender() Gender {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return Gender_MALE
}

func (x *CreateProfileReq) GetAuthId() string {
	if x != nil {
		return x.AuthId
	}
	return ""
}

type GetProfileReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuthId        string                 `protobuf:"bytes,1,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProfileReq) Reset() {
	*x = GetProfileReq{}
	mi := &file_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProfileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileReq) ProtoMessage() {}

func (x *GetProfileReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileReq.ProtoReflect.Descriptor instead.
func (*GetProfileReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{2}
}

func (x *GetProfileReq) GetAuthId() string {
	if x != nil {
		return x.AuthId
	}
	return ""
}

type UpdateProfileReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	ImageUrl      *string                `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3,oneof" json:"image_url,omitempty"`
	Dob           *Date                  `protobuf:"bytes,4,opt,name=dob,proto3,oneof" json:"dob,omitempty"`
	Anniversary   *Date                  `protobuf:"bytes,5,opt,name=anniversary,proto3,oneof" json:"anniversary,omitempty"`
	Gender        *Gender                `protobuf:"varint,6,opt,name=gender,proto3,enum=pb.Gender,oneof" json:"gender,omitempty"`
	AuthId        string                 `protobuf:"bytes,7,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProfileReq) Reset() {
	*x = UpdateProfileReq{}
	mi := &file_user_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProfileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileReq) ProtoMessage() {}

func (x *UpdateProfileReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileReq.ProtoReflect.Descriptor instead.
func (*UpdateProfileReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateProfileReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateProfileReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateProfileReq) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *UpdateProfileReq) GetDob() *Date {
	if x != nil {
		return x.Dob
	}
	return nil
}

func (x *UpdateProfileReq) GetAnniversary() *Date {
	if x != nil {
		return x.Anniversary
	}
	return nil
}

func (x *UpdateProfileReq) GetGender() Gender {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return Gender_MALE
}

func (x *UpdateProfileReq) GetAuthId() string {
	if x != nil {
		return x.AuthId
	}
	return ""
}

type DeleteProfileReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuthId        string                 `protobuf:"bytes,1,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteProfileReq) Reset() {
	*x = DeleteProfileReq{}
	mi := &file_user_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProfileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProfileReq) ProtoMessage() {}

func (x *DeleteProfileReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProfileReq.ProtoReflect.Descriptor instead.
func (*DeleteProfileReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteProfileReq) GetAuthId() string {
	if x != nil {
		return x.AuthId
	}
	return ""
}

type DeliveryAddress struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ReceiverName        string                 `protobuf:"bytes,2,opt,name=receiver_name,json=receiverName,proto3" json:"receiver_name,omitempty"`
	ReceiverPhone       string                 `protobuf:"bytes,3,opt,name=receiver_phone,json=receiverPhone,proto3" json:"receiver_phone,omitempty"`
	AddressAlias        AddressAlias           `protobuf:"varint,4,opt,name=address_alias,json=addressAlias,proto3,enum=pb.AddressAlias" json:"address_alias,omitempty"`
	OtherAlias          *string                `protobuf:"bytes,5,opt,name=other_alias,json=otherAlias,proto3,oneof" json:"other_alias,omitempty"`
	Latitude            float64                `protobuf:"fixed64,6,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude           float64                `protobuf:"fixed64,7,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Address             string                 `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`
	NearbyLandmark      *string                `protobuf:"bytes,9,opt,name=nearby_landmark,json=nearbyLandmark,proto3,oneof" json:"nearby_landmark,omitempty"`
	DeliveryInstruction *string                `protobuf:"bytes,10,opt,name=delivery_instruction,json=deliveryInstruction,proto3,oneof" json:"delivery_instruction,omitempty"`
	IsDefault           bool                   `protobuf:"varint,11,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	AuthId              string                 `protobuf:"bytes,12,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DeliveryAddress) Reset() {
	*x = DeliveryAddress{}
	mi := &file_user_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeliveryAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryAddress) ProtoMessage() {}

func (x *DeliveryAddress) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryAddress.ProtoReflect.Descriptor instead.
func (*DeliveryAddress) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{5}
}

func (x *DeliveryAddress) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeliveryAddress) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *DeliveryAddress) GetReceiverPhone() string {
	if x != nil {
		return x.ReceiverPhone
	}
	return ""
}

func (x *DeliveryAddress) GetAddressAlias() AddressAlias {
	if x != nil {
		return x.AddressAlias
	}
	return AddressAlias_HOME
}

func (x *DeliveryAddress) GetOtherAlias() string {
	if x != nil && x.OtherAlias != nil {
		return *x.OtherAlias
	}
	return ""
}

func (x *DeliveryAddress) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *DeliveryAddress) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *DeliveryAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DeliveryAddress) GetNearbyLandmark() string {
	if x != nil && x.NearbyLandmark != nil {
		return *x.NearbyLandmark
	}
	return ""
}

func (x *DeliveryAddress) GetDeliveryInstruction() string {
	if x != nil && x.DeliveryInstruction != nil {
		return *x.DeliveryInstruction
	}
	return ""
}

func (x *DeliveryAddress) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *DeliveryAddress) GetAuthId() string {
	if x != nil {
		return x.AuthId
	}
	return ""
}

func (x *DeliveryAddress) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DeliveryAddress) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateDeliveryAddressReq struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ReceiverName        string                 `protobuf:"bytes,1,opt,name=receiver_name,json=receiverName,proto3" json:"receiver_name,omitempty"`
	ReceiverPhone       string                 `protobuf:"bytes,2,opt,name=receiver_phone,json=receiverPhone,proto3" json:"receiver_phone,omitempty"`
	AddressAlias        AddressAlias           `protobuf:"varint,3,opt,name=address_alias,json=addressAlias,proto3,enum=pb.AddressAlias" json:"address_alias,omitempty"`
	OtherAlias          *string                `protobuf:"bytes,4,opt,name=other_alias,json=otherAlias,proto3,oneof" json:"other_alias,omitempty"`
	Latitude            float64                `protobuf:"fixed64,5,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude           float64                `protobuf:"fixed64,6,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Address             string                 `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
	NearbyLandmark      *string                `protobuf:"bytes,8,opt,name=nearby_landmark,json=nearbyLandmark,proto3,oneof" json:"nearby_landmark,omitempty"`
	DeliveryInstruction *string                `protobuf:"bytes,9,opt,name=delivery_instruction,json=deliveryInstruction,proto3,oneof" json:"delivery_instruction,omitempty"`
	IsDefault           bool                   `protobuf:"varint,10,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	AuthId              string                 `protobuf:"bytes,11,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CreateDeliveryAddressReq) Reset() {
	*x = CreateDeliveryAddressReq{}
	mi := &file_user_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDeliveryAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeliveryAddressReq) ProtoMessage() {}

func (x *CreateDeliveryAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeliveryAddressReq.ProtoReflect.Descriptor instead.
func (*CreateDeliveryAddressReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6}
}

func (x *CreateDeliveryAddressReq) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *CreateDeliveryAddressReq) GetReceiverPhone() string {
	if x != nil {
		return x.ReceiverPhone
	}
	return ""
}

func (x *CreateDeliveryAddressReq) GetAddressAlias() AddressAlias {
	if x != nil {
		return x.AddressAlias
	}
	return AddressAlias_HOME
}

func (x *CreateDeliveryAddressReq) GetOtherAlias() string {
	if x != nil && x.OtherAlias != nil {
		return *x.OtherAlias
	}
	return ""
}

func (x *CreateDeliveryAddressReq) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CreateDeliveryAddressReq) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *CreateDeliveryAddressReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateDeliveryAddressReq) GetNearbyLandmark() string {
	if x != nil && x.NearbyLandmark != nil {
		return *x.NearbyLandmark
	}
	return ""
}

func (x *CreateDeliveryAddressReq) GetDeliveryInstruction() string {
	if x != nil && x.DeliveryInstruction != nil {
		return *x.DeliveryInstruction
	}
	return ""
}

func (x *CreateDeliveryAddressReq) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *CreateDeliveryAddressReq) GetAuthId() string {
	if x != nil {
		return x.AuthId
	}
	return ""
}

type GetDeliveryAddressReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeliveryAddressReq) Reset() {
	*x = GetDeliveryAddressReq{}
	mi := &file_user_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeliveryAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeliveryAddressReq) ProtoMessage() {}

func (x *GetDeliveryAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeliveryAddressReq.ProtoReflect.Descriptor instead.
func (*GetDeliveryAddressReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{7}
}

func (x *GetDeliveryAddressReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDefaultDeliveryAddressReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuthId        string                 `protobuf:"bytes,1,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDefaultDeliveryAddressReq) Reset() {
	*x = GetDefaultDeliveryAddressReq{}
	mi := &file_user_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDefaultDeliveryAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultDeliveryAddressReq) ProtoMessage() {}

func (x *GetDefaultDeliveryAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultDeliveryAddressReq.ProtoReflect.Descriptor instead.
func (*GetDefaultDeliveryAddressReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{8}
}

func (x *GetDefaultDeliveryAddressReq) GetAuthId() string {
	if x != nil {
		return x.AuthId
	}
	return ""
}

type ListDeliveryAddressReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuthId        string                 `protobuf:"bytes,1,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDeliveryAddressReq) Reset() {
	*x = ListDeliveryAddressReq{}
	mi := &file_user_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDeliveryAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeliveryAddressReq) ProtoMessage() {}

func (x *ListDeliveryAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeliveryAddressReq.ProtoReflect.Descriptor instead.
func (*ListDeliveryAddressReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{9}
}

func (x *ListDeliveryAddressReq) GetAuthId() string {
	if x != nil {
		return x.AuthId
	}
	return ""
}

type ListDeliveryAddressRes struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	DeliveryAddresses []*DeliveryAddress     `protobuf:"bytes,1,rep,name=delivery_addresses,json=deliveryAddresses,proto3" json:"delivery_addresses,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListDeliveryAddressRes) Reset() {
	*x = ListDeliveryAddressRes{}
	mi := &file_user_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDeliveryAddressRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeliveryAddressRes) ProtoMessage() {}

func (x *ListDeliveryAddressRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeliveryAddressRes.ProtoReflect.Descriptor instead.
func (*ListDeliveryAddressRes) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{10}
}

func (x *ListDeliveryAddressRes) GetDeliveryAddresses() []*DeliveryAddress {
	if x != nil {
		return x.DeliveryAddresses
	}
	return nil
}

type UpdateDeliveryAddressReq struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ReceiverName        *string                `protobuf:"bytes,1,opt,name=receiver_name,json=receiverName,proto3,oneof" json:"receiver_name,omitempty"`
	ReceiverPhone       *string                `protobuf:"bytes,2,opt,name=receiver_phone,json=receiverPhone,proto3,oneof" json:"receiver_phone,omitempty"`
	Alias               *AddressAlias          `protobuf:"varint,3,opt,name=alias,proto3,enum=pb.AddressAlias,oneof" json:"alias,omitempty"`
	Location            *LatLng                `protobuf:"bytes,4,opt,name=location,proto3,oneof" json:"location,omitempty"`
	Address             *string                `protobuf:"bytes,5,opt,name=address,proto3,oneof" json:"address,omitempty"`
	NearbyLandmark      *string                `protobuf:"bytes,6,opt,name=nearby_landmark,json=nearbyLandmark,proto3,oneof" json:"nearby_landmark,omitempty"`
	DeliveryInstruction *string                `protobuf:"bytes,7,opt,name=delivery_instruction,json=deliveryInstruction,proto3,oneof" json:"delivery_instruction,omitempty"`
	AuthId              string                 `protobuf:"bytes,8,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *UpdateDeliveryAddressReq) Reset() {
	*x = UpdateDeliveryAddressReq{}
	mi := &file_user_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDeliveryAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeliveryAddressReq) ProtoMessage() {}

func (x *UpdateDeliveryAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeliveryAddressReq.ProtoReflect.Descriptor instead.
func (*UpdateDeliveryAddressReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateDeliveryAddressReq) GetReceiverName() string {
	if x != nil && x.ReceiverName != nil {
		return *x.ReceiverName
	}
	return ""
}

func (x *UpdateDeliveryAddressReq) GetReceiverPhone() string {
	if x != nil && x.ReceiverPhone != nil {
		return *x.ReceiverPhone
	}
	return ""
}

func (x *UpdateDeliveryAddressReq) GetAlias() AddressAlias {
	if x != nil && x.Alias != nil {
		return *x.Alias
	}
	return AddressAlias_HOME
}

func (x *UpdateDeliveryAddressReq) GetLocation() *LatLng {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *UpdateDeliveryAddressReq) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *UpdateDeliveryAddressReq) GetNearbyLandmark() string {
	if x != nil && x.NearbyLandmark != nil {
		return *x.NearbyLandmark
	}
	return ""
}

func (x *UpdateDeliveryAddressReq) GetDeliveryInstruction() string {
	if x != nil && x.DeliveryInstruction != nil {
		return *x.DeliveryInstruction
	}
	return ""
}

func (x *UpdateDeliveryAddressReq) GetAuthId() string {
	if x != nil {
		return x.AuthId
	}
	return ""
}

type UpdateDefaultDeliveryAddressReq struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	DeliveryAddressId string                 `protobuf:"bytes,1,opt,name=delivery_address_id,json=deliveryAddressId,proto3" json:"delivery_address_id,omitempty"`
	AuthId            string                 `protobuf:"bytes,2,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateDefaultDeliveryAddressReq) Reset() {
	*x = UpdateDefaultDeliveryAddressReq{}
	mi := &file_user_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDefaultDeliveryAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDefaultDeliveryAddressReq) ProtoMessage() {}

func (x *UpdateDefaultDeliveryAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDefaultDeliveryAddressReq.ProtoReflect.Descriptor instead.
func (*UpdateDefaultDeliveryAddressReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateDefaultDeliveryAddressReq) GetDeliveryAddressId() string {
	if x != nil {
		return x.DeliveryAddressId
	}
	return ""
}

func (x *UpdateDefaultDeliveryAddressReq) GetAuthId() string {
	if x != nil {
		return x.AuthId
	}
	return ""
}

type DeleteDeliveryAddressReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDeliveryAddressReq) Reset() {
	*x = DeleteDeliveryAddressReq{}
	mi := &file_user_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDeliveryAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeliveryAddressReq) ProtoMessage() {}

func (x *DeleteDeliveryAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeliveryAddressReq.ProtoReflect.Descriptor instead.
func (*DeleteDeliveryAddressReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteDeliveryAddressReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_user_proto protoreflect.FileDescriptor

var file_user_proto_rawDesc = string([]byte{
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x8a, 0x03, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x03, 0x64, 0x6f, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x48, 0x01, 0x52, 0x03, 0x64, 0x6f, 0x62, 0x88,
	0x01, 0x01, 0x12, 0x2f, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x72,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x61, 0x74,
	0x65, 0x48, 0x02, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x72, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x48,
	0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x64, 0x6f,
	0x62, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x6e, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x72,
	0x79, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x8d, 0x02, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x03, 0x64, 0x6f, 0x62, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x48, 0x01,
	0x52, 0x03, 0x64, 0x6f, 0x62, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x70, 0x62, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x48, 0x02, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x48, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x49, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x64, 0x6f,
	0x62, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x6e, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x72,
	0x79, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x28, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x49, 0x64, 0x22, 0xab, 0x02, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x03, 0x64, 0x6f, 0x62, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x48, 0x02, 0x52,
	0x03, 0x64, 0x6f, 0x62, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x48, 0x03, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x48, 0x04, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x49, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x64, 0x6f, 0x62, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x6e,
	0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x72, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x22, 0x2b, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x49,
	0x64, 0x22, 0xef, 0x04, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x35, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x24, 0x0a, 0x0b, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0a, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x2c, 0x0a, 0x0f, 0x6e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x5f, 0x6c, 0x61, 0x6e,
	0x64, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0e, 0x6e,
	0x65, 0x61, 0x72, 0x62, 0x79, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01,
	0x12, 0x36, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x13, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x49, 0x64,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x62,
	0x79, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xf2, 0x03, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x35, 0x0a, 0x0d,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x12, 0x24, 0x0a, 0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a,
	0x0f, 0x6e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0e, 0x6e, 0x65, 0x61, 0x72, 0x62, 0x79,
	0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x14, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x13, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x49, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x6e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x42,
	0x17, 0x0a, 0x15, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x37, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x16, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x49, 0x64, 0x22, 0x5c, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x11, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0xdd, 0x03, 0x0a, 0x18,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b,
	0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x48,
	0x02, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x48, 0x03, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x6e, 0x65, 0x61, 0x72, 0x62,
	0x79, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x05, 0x52, 0x0e, 0x6e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61,
	0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x13, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x07, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x49, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x12,
	0x0a, 0x10, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x6d, 0x61,
	0x72, 0x6b, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6a, 0x0a, 0x1f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2e,
	0x0a, 0x13, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x2a, 0x3b, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x08, 0x0a,
	0x04, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x45, 0x4d, 0x41, 0x4c,
	0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x53, 0x10, 0x02, 0x12,
	0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x44, 0x49, 0x53, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x03,
	0x2a, 0x38, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x08, 0x0a, 0x04, 0x48, 0x4f, 0x4d, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x4f,
	0x52, 0x4b, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x4f, 0x54, 0x45, 0x4c, 0x10, 0x02, 0x12,
	0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x03, 0x32, 0xfe, 0x05, 0x0a, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x00,
	0x12, 0x2e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x11,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x00,
	0x12, 0x34, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e,
	0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4c, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70,
	0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x00, 0x12,
	0x53, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x23, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x2e,
	0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x3a, 0x5a, 0x38, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x73, 0x68, 0x39, 0x31,
	0x39, 0x38, 0x39, 0x32, 0x30, 0x31, 0x2f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x66, 0x61, 0x73, 0x74,
	0x2d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_user_proto_rawDescOnce sync.Once
	file_user_proto_rawDescData []byte
)

func file_user_proto_rawDescGZIP() []byte {
	file_user_proto_rawDescOnce.Do(func() {
		file_user_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_user_proto_rawDesc), len(file_user_proto_rawDesc)))
	})
	return file_user_proto_rawDescData
}

var file_user_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_user_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_user_proto_goTypes = []any{
	(Gender)(0),                             // 0: pb.Gender
	(AddressAlias)(0),                       // 1: pb.AddressAlias
	(*Profile)(nil),                         // 2: pb.Profile
	(*CreateProfileReq)(nil),                // 3: pb.CreateProfileReq
	(*GetProfileReq)(nil),                   // 4: pb.GetProfileReq
	(*UpdateProfileReq)(nil),                // 5: pb.UpdateProfileReq
	(*DeleteProfileReq)(nil),                // 6: pb.DeleteProfileReq
	(*DeliveryAddress)(nil),                 // 7: pb.DeliveryAddress
	(*CreateDeliveryAddressReq)(nil),        // 8: pb.CreateDeliveryAddressReq
	(*GetDeliveryAddressReq)(nil),           // 9: pb.GetDeliveryAddressReq
	(*GetDefaultDeliveryAddressReq)(nil),    // 10: pb.GetDefaultDeliveryAddressReq
	(*ListDeliveryAddressReq)(nil),          // 11: pb.ListDeliveryAddressReq
	(*ListDeliveryAddressRes)(nil),          // 12: pb.ListDeliveryAddressRes
	(*UpdateDeliveryAddressReq)(nil),        // 13: pb.UpdateDeliveryAddressReq
	(*UpdateDefaultDeliveryAddressReq)(nil), // 14: pb.UpdateDefaultDeliveryAddressReq
	(*DeleteDeliveryAddressReq)(nil),        // 15: pb.DeleteDeliveryAddressReq
	(*Date)(nil),                            // 16: pb.Date
	(*timestamppb.Timestamp)(nil),           // 17: google.protobuf.Timestamp
	(*LatLng)(nil),                          // 18: pb.LatLng
	(*EmptyRes)(nil),                        // 19: pb.EmptyRes
}
var file_user_proto_depIdxs = []int32{
	16, // 0: pb.Profile.dob:type_name -> pb.Date
	16, // 1: pb.Profile.anniversary:type_name -> pb.Date
	0,  // 2: pb.Profile.gender:type_name -> pb.Gender
	17, // 3: pb.Profile.created_at:type_name -> google.protobuf.Timestamp
	17, // 4: pb.Profile.updated_at:type_name -> google.protobuf.Timestamp
	16, // 5: pb.CreateProfileReq.dob:type_name -> pb.Date
	16, // 6: pb.CreateProfileReq.anniversary:type_name -> pb.Date
	0,  // 7: pb.CreateProfileReq.gender:type_name -> pb.Gender
	16, // 8: pb.UpdateProfileReq.dob:type_name -> pb.Date
	16, // 9: pb.UpdateProfileReq.anniversary:type_name -> pb.Date
	0,  // 10: pb.UpdateProfileReq.gender:type_name -> pb.Gender
	1,  // 11: pb.DeliveryAddress.address_alias:type_name -> pb.AddressAlias
	17, // 12: pb.DeliveryAddress.created_at:type_name -> google.protobuf.Timestamp
	17, // 13: pb.DeliveryAddress.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 14: pb.CreateDeliveryAddressReq.address_alias:type_name -> pb.AddressAlias
	7,  // 15: pb.ListDeliveryAddressRes.delivery_addresses:type_name -> pb.DeliveryAddress
	1,  // 16: pb.UpdateDeliveryAddressReq.alias:type_name -> pb.AddressAlias
	18, // 17: pb.UpdateDeliveryAddressReq.location:type_name -> pb.LatLng
	3,  // 18: pb.UserService.CreateProfile:input_type -> pb.CreateProfileReq
	4,  // 19: pb.UserService.GetProfile:input_type -> pb.GetProfileReq
	5,  // 20: pb.UserService.UpdateProfile:input_type -> pb.UpdateProfileReq
	6,  // 21: pb.UserService.DeleteProfile:input_type -> pb.DeleteProfileReq
	8,  // 22: pb.UserService.CreateDeliveryAddress:input_type -> pb.CreateDeliveryAddressReq
	9,  // 23: pb.UserService.GetDeliveryAddress:input_type -> pb.GetDeliveryAddressReq
	10, // 24: pb.UserService.GetDefaultDeliveryAddress:input_type -> pb.GetDefaultDeliveryAddressReq
	11, // 25: pb.UserService.ListDeliveryAddress:input_type -> pb.ListDeliveryAddressReq
	7,  // 26: pb.UserService.UpdateDeliveryAddress:input_type -> pb.DeliveryAddress
	14, // 27: pb.UserService.UpdateDefaultDeliveryAddress:input_type -> pb.UpdateDefaultDeliveryAddressReq
	15, // 28: pb.UserService.DeleteDeliveryAddress:input_type -> pb.DeleteDeliveryAddressReq
	2,  // 29: pb.UserService.CreateProfile:output_type -> pb.Profile
	2,  // 30: pb.UserService.GetProfile:output_type -> pb.Profile
	2,  // 31: pb.UserService.UpdateProfile:output_type -> pb.Profile
	19, // 32: pb.UserService.DeleteProfile:output_type -> pb.EmptyRes
	7,  // 33: pb.UserService.CreateDeliveryAddress:output_type -> pb.DeliveryAddress
	7,  // 34: pb.UserService.GetDeliveryAddress:output_type -> pb.DeliveryAddress
	7,  // 35: pb.UserService.GetDefaultDeliveryAddress:output_type -> pb.DeliveryAddress
	12, // 36: pb.UserService.ListDeliveryAddress:output_type -> pb.ListDeliveryAddressRes
	7,  // 37: pb.UserService.UpdateDeliveryAddress:output_type -> pb.DeliveryAddress
	19, // 38: pb.UserService.UpdateDefaultDeliveryAddress:output_type -> pb.EmptyRes
	19, // 39: pb.UserService.DeleteDeliveryAddress:output_type -> pb.EmptyRes
	29, // [29:40] is the sub-list for method output_type
	18, // [18:29] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_user_proto_init() }
func file_user_proto_init() {
	if File_user_proto != nil {
		return
	}
	file_shared_proto_init()
	file_user_proto_msgTypes[0].OneofWrappers = []any{}
	file_user_proto_msgTypes[1].OneofWrappers = []any{}
	file_user_proto_msgTypes[3].OneofWrappers = []any{}
	file_user_proto_msgTypes[5].OneofWrappers = []any{}
	file_user_proto_msgTypes[6].OneofWrappers = []any{}
	file_user_proto_msgTypes[11].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_user_proto_rawDesc), len(file_user_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_proto_goTypes,
		DependencyIndexes: file_user_proto_depIdxs,
		EnumInfos:         file_user_proto_enumTypes,
		MessageInfos:      file_user_proto_msgTypes,
	}.Build()
	File_user_proto = out.File
	file_user_proto_goTypes = nil
	file_user_proto_depIdxs = nil
}
