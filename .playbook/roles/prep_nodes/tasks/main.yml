---
- name: Kubernetes Node Setup
  hosts: master,workers
  become: true
  tasks:
    - name: Disable swap
      command: swapoff -a
      ignore_errors: yes

    - name: Permanently disable swap in fstab
      replace:
        path: /etc/fstab
        regexp: '^(.*\sswap\s.*)$'
        replace: '#\1'

    - name: Load kernel modules
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter

    - name: Load overlay module
      command: modprobe overlay

    - name: Load br_netfilter module
      command: modprobe br_netfilter

    - name: Configure sysctl settings for Kubernetes
      copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1

    - name: Apply sysctl settings
      command: sysctl --system

    - name: Download and install containerd
      block:
        - name: Download containerd
          get_url:
            url: "https://github.com/containerd/containerd/releases/download/v1.7.14/containerd-1.7.14-linux-amd64.tar.gz"
            dest: "/tmp/containerd.tar.gz"

        - name: Extract containerd
          ansible.builtin.unarchive:
            src: "/tmp/containerd.tar.gz"
            dest: "/usr/local"
            remote_src: yes

        - name: Ensure systemd dir exists
          file:
            path: /usr/local/lib/systemd/system/
            state: directory
            mode: "0755"

        - name: Download containerd service file
          get_url:
            url: "https://raw.githubusercontent.com/containerd/containerd/main/containerd.service"
            dest: "/usr/local/lib/systemd/system/containerd.service"

        - name: Create containerd config directory
          file:
            path: /etc/containerd
            state: directory

        - name: Generate containerd default config
          command: containerd config default
          register: containerd_config

        - name: Save containerd config
          copy:
            dest: /etc/containerd/config.toml
            content: "{{ containerd_config.stdout }}"

        - name: Enable SystemdCgroup in containerd
          replace:
            path: /etc/containerd/config.toml
            regexp: "SystemdCgroup = false"
            replace: "SystemdCgroup = true"

        - name: Reload systemd and start containerd
          systemd:
            name: containerd
            daemon_reload: yes
            enabled: yes
            state: started

    - name: Install runc
      block:
        - name: Download runc
          get_url:
            url: "https://github.com/opencontainers/runc/releases/download/v1.1.12/runc.amd64"
            dest: "/tmp/runc"

        - name: Install runc
          command: install -m 755 /tmp/runc /usr/local/sbin/runc

    - name: Install CNI plugins
      block:
        - name: Download CNI plugins
          get_url:
            url: "https://github.com/containernetworking/plugins/releases/download/v1.5.0/cni-plugins-linux-amd64-v1.5.0.tgz"
            dest: "/tmp/cni-plugins.tgz"

        - name: Create CNI bin directory
          file:
            path: /opt/cni/bin
            state: directory

        - name: Extract CNI plugins
          ansible.builtin.unarchive:
            src: "/tmp/cni-plugins.tgz"
            dest: "/opt/cni/bin"
            remote_src: yes

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg
        state: present
        update_cache: yes

    - name: Add Kubernetes APT repository key
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes repository
      lineinfile:
        path: /etc/apt/sources.list.d/kubernetes.list
        line: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /"
        create: yes

    - name: Install Kubernetes packages
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes

    - name: Hold Kubernetes packages from upgrade
      command: apt-mark hold kubelet kubeadm kubectl

    - name: Configure crictl to use containerd
      copy:
        dest: /etc/crictl.yaml
        content: |
          runtime-endpoint: unix:///var/run/containerd/containerd.sock
