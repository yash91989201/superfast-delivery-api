scalar Time
scalar Date
scalar DateTime

enum OrderBy {
  ASC
  DESC
}

enum AuthRole {
  CUSTOMER
  DELIVERY_PARTNER
  VENDOR
  ADMIN
}

enum Gender {
  MALE
  FEMALE
  OTHERS
  UNDISCLOSED
}

type Auth {
  id: String!
  email: String
  email_verified: Boolean!
  phone: String
  auth_role: AuthRole!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

type Profile {
  id: String!
  name: String!
  image_url: String
  dob: Date
  anniversary: Date
  gender: Gender
  auth_id: String!
  created_at: DateTime!
  updated_at: DateTime!
}

input SignInWithEmailInput {
  email: String!
  otp: String
}

input SignInWithPhoneInput {
  phone: String!
  otp: String
}

input SignInWithGoogleInput {
  id_token: String!
}

type SignInOutput {
  auth: Auth
  profile: Profile
  session_id: String
  access_token: String
  access_token_expires_at: DateTime
  create_profile: Boolean!
  verify_otp: Boolean!
}

input GetAuthByIdInput {
  id: String!
}

input GetAuthInput {
  email: String
  phone: String
}

input CreateProfileInput {
  name: String!
  image_url: String
  dob: Date
  anniversary: Date
  gender: Gender
  auth_id: String!
}

input UpdateProfileInput {
  id: String
  name: String
  image_url: String
  dob: Date
  anniversary: Date
  gender: Gender
  auth_id: String!
}

input GetProfileInput {
  auth_id: String!
}

enum ShopType {
  RESTAURANT
  GROCERY
  PHARMACEUTICAL
}

enum ShopStatus {
  OPEN
  CLOSED
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

type LatLng {
  lat: Float!
  lng: Float!
}

type Shop {
  id: ID!
  name: String!
  shop_type: ShopType!
  shop_status: ShopStatus!
  owner_id: ID!
  created_at: String!
  updated_at: String!
  deleted_at: String
  contact: ShopContact!
  address: ShopAddress!
  timings: [ShopTiming!]
  images: [ShopImage!]
}

type ShopContact {
  id: ID!
  name: String!
  phone_number: String!
  email: String!
  shop_id: ID!
  created_at: String!
}

type ShopAddress {
  id: ID!
  address1: String!
  address2: String!
  longitude: Float!
  latitude: Float!
  nearby_landmark: String!
  city: String!
  state: String!
  pincode: String!
  country: String!
  shop_id: ID!
  created_at: String!
}

type ShopImage {
  id: ID!
  image_url: String!
  description: String!
  shop_id: ID!
  created_at: String!
  updated_at: String!
}

type ShopTiming {
  id: ID!
  day: DayOfWeek!
  opens_at: Time!
  closes_at: Time!
  shop_id: ID!
  created_at: String!
  updated_at: String!
}

input CreateShopContactInput {
  name: String!
  phone_number: String!
  email: String!
}

input CreateShopAddressInput {
  address1: String!
  address2: String
  longitude: Float!
  latitude: Float!
  nearby_landmark: String!
  city: String!
  state: String!
  pincode: String!
  country: String!
}

input LatLngInput {
  lat: Float!
  lng: Float!
}

input CreateShopImageInput {
  image_url: String!
  description: String!
}

input CreateShopTimingInput {
  day: DayOfWeek!
  opens_at: Time!
  closes_at: Time!
}

input CreateShopInput {
  name: String!
  shop_type: ShopType!
  shop_status: ShopStatus!
  owner_id: ID!
  address: CreateShopAddressInput!
  contact: CreateShopContactInput!
  images: [CreateShopImageInput!]
  timings: [CreateShopTimingInput!]
}

input UpdateShopInput {
  id: ID!
  name: String
  shop_type: ShopType
  shop_status: ShopStatus
}

input UpdateShopAddressInput {
  id: ID!
  address1: String
  address2: String
  location: LatLngInput
  nearby_landmark: String
  city: String
  state: String
  pincode: String
  country: String
}

input UpdateShopContactInput {
  id: ID!
  name: String
  phone_number: String
  email: String
}

input UpdateShopImageInput {
  id: ID!
  image_url: String
  description: String
}

input UpdateShopTimingInput {
  id: ID!
  day: DayOfWeek
  opens_at: Time
  closes_at: Time
}

type CreateShopOutput {
  id: ID!
  message: String!
}

type UpdateShopOutput {
  message: String!
}

input ListShopsInput {
  name: String
  shop_type: ShopType
  shop_status: ShopStatus
  order_by: OrderBy
  limit: Int
  offset: Int
}

type ListShopsOutput {
  shops: [Shop!]
  total: Int!
}

type ItemVariant {
  id: ID!
  variant_name: String!
  relative_price: Float!
  relative_pricing: Boolean!
  price: Float!
  description: String
  item_id: String!
}

type ItemAddon {
  id: ID!
  addon_name: String!
  addon_price: Float!
  description: String
  item_id: String!
}

type MenuItem {
  id: ID!
  name: String!
  description: String
  price: Float!
  menu_id: String!
  variants: [ItemVariant]!
  addons: [ItemAddon]!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

type RetailItem {
  id: ID!
  name: String!
  description: String
  price: Float!
  category_id: String!
  variants: [ItemVariant]!
  addons: [ItemAddon]!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

type MedicineItem {
  id: ID!
  name: String!
  price: Float!
  description: String
  category_id: String!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

# Types for Category

type RestaurantMenu {
  id: ID!
  menu_name: String!
  shop_id: String!
  menu_items: [MenuItem]!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

type RetailCategory {
  id: ID!
  category_name: String!
  shop_id: String!
  retail_items: [RetailItem]!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

type MedicineCategory {
  id: ID!
  category_name: String!
  shop_id: String!
  medicine_items: [MedicineItem]!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

# Input Types for Create Requests

input CreateItemVariantReq {
  variant_name: String!
  relative_price: Float!
  relative_pricing: Boolean!
  price: Float!
  description: String
}

input CreateItemAddonReq {
  addon_name: String!
  addon_price: Float!
  description: String
}

input CreateMenuItemReq {
  name: String!
  description: String
  price: Float!
  variants: [CreateItemVariantReq]!
  addons: [CreateItemAddonReq]!
}

input CreateRestaurantMenuReq {
  menu_name: String!
  shop_id: String!
  menu_items: [CreateMenuItemReq]!
}

input CreateRetailItemReq {
  name: String!
  description: String
  price: Float!
  category_id: String!
  variants: [CreateItemVariantReq]!
  addons: [CreateItemAddonReq]!
}

input CreateRetailCategoryReq {
  category_name: String!
  shop_id: String!
  retail_items: [CreateRetailItemReq]!
}

input CreateMedicineItemReq {
  name: String!
  price: Float!
  description: String
  category_id: String!
}

input CreateMedicineCategoryReq {
  category_name: String!
  shop_id: String!
  medicine_items: [CreateMedicineItemReq]!
}

type Query {
  AuthById(input: GetAuthByIdInput!): Auth
  Auth(input: GetAuthInput!): Auth

  Profile(input: GetProfileInput!): Profile

  GetShop(id: ID!): Shop!
  ListShops(input: ListShopsInput): ListShopsOutput!
}

type Mutation {
  SignInWithEmail(input: SignInWithEmailInput!): SignInOutput!
  SignInWithPhone(input: SignInWithPhoneInput!): SignInOutput!
  SignInWithGoogle(input: SignInWithGoogleInput!): SignInOutput!
  RefreshToken(session_id: String!): SignInOutput!
  LogOut(session_id: String!): SignInOutput!

  CreateProfile(input: CreateProfileInput!): Profile!
  UpdateProfile(input: UpdateProfileInput!): Profile!

  CreateShop(input: CreateShopInput!): CreateShopOutput!
  UpdateShop(input: UpdateShopInput!): UpdateShopOutput!
  UpdateShopAddress(input: UpdateShopAddressInput!): UpdateShopOutput!
  UpdateShopContact(input: UpdateShopContactInput!): UpdateShopOutput!
  UpdateShopImages(input: [UpdateShopImageInput!]!): UpdateShopOutput!
  UpdateShopTimings(input: [UpdateShopTimingInput!]!): UpdateShopOutput!
  DeleteShop(id: ID!): UpdateShopOutput!

  CreateRestaurantMenu(input: CreateRestaurantMenuReq!): RestaurantMenu!
  CreateRetailCategory(input: CreateRetailCategoryReq!): RetailCategory!
  CreateMedicineCategory(input: CreateMedicineCategoryReq!): MedicineCategory!
}
